<launch>
    <arg name="warp_nodelet_manager" default=""/>

    <arg name="camera_image_topic" default="/camera/image_raw"/>
    <arg name="warped_image_topic" default="/warped_image"/>
    <arg name="undistort_out" default="/undistorted_image"/>

    <!-- if no manager provided, load it -->
    <group if="$(eval arg('warp_nodelet_manager') == '')">
        <node pkg="nodelet" type="nodelet" name="warp_nodelet_manager"  args="manager" output="screen"/>

        <node pkg="nodelet" type="nodelet" name="warp_image_nodelet" args="load drive_ros_image_recognition/WarpImageNodelet warp_nodelet_manager" output="screen">
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/homography_matrix.yaml"/>
            <remap from="~/img_in" to="$(arg camera_image_topic)"/>
            <remap from="~/warped_out" to="$(arg warped_image_topic)"/>
             <!-- debug: undistored camera image (not warped) -->
            <remap from="~/undistort_out" to="$(arg undistort_out)"/>
        </node>
    </group>

    <!-- use provided nodelet manager -->
    <group unless="$(eval arg('warp_nodelet_manager') == '')">
        <node pkg="nodelet" type="nodelet" name="warp_image_nodelet" args="load drive_ros_image_recognition/WarpImageNodelet $(arg warp_nodelet_manager)" output="screen">
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/homography_matrix.yaml"/>
            <remap from="~/img_in" to="$(arg camera_image_topic)"/>
            <remap from="~/warped_out" to="$(arg warped_image_topic)"/>
             <!-- debug: undistored camera image (not warped) -->
            <remap from="~/undistort_out" to="$(arg undistort_out)"/>
        </node>
    </group>
</launch>
