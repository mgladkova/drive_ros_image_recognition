<launch>
    <arg name="road_trajectory_topic" default="/road_trajectory"/>
    <arg name="incoming_image" default="/warped_image"/>
    <arg name="camera_info" default="/camera/camera_info"/>
    <arg name="homography_topic" default="/camera/camera_homography"/>
    <arg name="visual_detection_topic" default="/line_out"/>
    <arg name="camera_frame" default="/camera_optical"/>
    <arg name="world_frame" default="/front_axis_middle"/>
    <arg name="debug" default="false"/>
    <arg name="use_nodelet" default="false"/>
    <arg name="nodelet_manager" default=""/>

    <arg if="$(arg debug)" name="launch-prefix" value="gdb -ex run --args"/>
    <arg unless="$(arg debug)" name="launch-prefix" value=""/>

    <group unless="$(arg use_nodelet)">
        <node name="road_detection" pkg="drive_ros_image_recognition" type="road_detection_node" respawn="false" output="screen" launch-prefix="$(arg launch-prefix)">
            <remap from="img_in" to="$(arg incoming_image)"/>
            <remap from="road_in" to="$(arg road_trajectory_topic)"/>
            <remap from="camera_info" to="$(arg camera_info)"/>
            <remap from="homography_in" to="$(arg homography_topic)"/>
            <remap from="line_out" to="$(arg visual_detection_topic)"/>
            <param name="world_frame" type="str" value="$(arg world_frame)"/>
            <param name="camera_frame" type="str" value="$(arg camera_frame)"/>
            <!-- todo: car command output channel, as we have not decided on the interface yet, will comment for now
            <remap from="car" to "car_out"/> -->
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/road_detection.yaml"/>
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/homography.yaml"/>
        </node>
    </group>

    <group if="$(arg use_nodelet)">
        <arg if="$(eval arg('nodelet_manager') == '')" name="manager_used" value="road_detection_nodelet_manager"/>
        <arg unless="$(eval arg('nodelet_manager') == '')" name="manager_used" value="$(arg nodelet_manager)"/>

        <node if="$(eval arg('nodelet_manager') == '')" pkg="nodelet" type="nodelet" name="road_detection_nodelet_manager"  args="manager" output="screen"/>
        <node pkg="nodelet" type="nodelet" name="road_detection_nodelet" args="load drive_ros_image_recognition/RoadDetectionNodelet $(arg manager_used)" output="screen" launch-prefix="$(arg launch-prefix)">
            <remap from="img_in" to="$(arg incoming_image)"/>
            <remap from="road_in" to="$(arg road_trajectory_topic)"/>
            <remap from="homography_in" to="$(arg homography_topic)"/>
            <remap from="line_out" to="$(arg visual_detection_topic)"/>
            <param name="world_frame" type="str" value="$(arg world_frame)"/>
            <param name="camera_frame" type="str" value="$(arg camera_frame)"/>
            <!-- todo: car command output channel, as we have not decided on the interface yet, will comment for now
            <remap from="car" to "car_out"/> -->
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/road_detection.yaml"/>
            <rosparam command="load" file="$(find drive_ros_image_recognition)/config/homography.yaml"/>
        </node>
    </group>
</launch>
